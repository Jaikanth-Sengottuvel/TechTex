Unified Prompt for Replit Agent (Bugs + Features + UI + QA)

Hello Replit Agent üëã
This is the full specification to fix bugs and add professional Figma/Canva-like features for our design editor.
Please carefully follow the details, implement features, and validate with the QA checklist.

1) Critical Bug Fixes (Selection & Move)

Deselect behavior

Click on empty canvas ‚Üí clear selection.

Press Esc ‚Üí clear selection and exit any drawing/pen edit mode.

Shift+click on selected object ‚Üí toggle selection.

Drag on empty space ‚Üí marquee selection (box select).

Move/Drag

With Move (V) tool active, drag on selected object ‚Üí move object.

Arrow keys ‚Üí nudge 1px; Shift+Arrow ‚Üí 10px.

Object must stay draggable even if click happens on fill or stroke.

Show 8 resize handles + 1 rotation handle around selection.

Hit-testing

Respect stroke width in hit test.

Avoid UI panels intercepting events (canvas only).

Prevent canvas pan while drawing paths.

2) Tools To Implement/Correct
A) Move (V)

Primary select/move/resize/rotate tool.

Resize with handles, keep aspect with Shift.

B) Hand (H / Space)

Pan canvas, no selection changes while panning.

C) Rectangle (R), Ellipse (O), Polygon/Star, Triangle

Drag to draw; Shift to constrain (square/circle).

Corner radius control for rectangles.

D) Line (L)

Straight line; Shift snaps to 45¬∞ increments.

E) Pencil (B) ‚Äì Freehand

Draw freehand paths (list of points).

Apply smoothing + simplification (RDP algorithm).

Properties: stroke color, width, cap, join, opacity, dashed.

Accept pressure input if available.

Finish on mouseup; Esc cancels.

F) Pen (P) ‚Äì Bezier

Click to add corner points; click+drag for smooth points with handles.

Enter to finish, Backspace deletes last point, Esc cancels.

Path edit mode: anchors + handles visible, drag to edit.

Convert point type (corner/smooth) with Alt or context menu.

Close path by clicking first point.

G) Eraser (E)

Start with Object Erase: drag eraser, objects hit get deleted.

Add optional toggle for Stroke Erase (remove path segments).

Eraser size slider; cursor shows radius.

H) Text (T)

Click ‚Üí point text; drag ‚Üí area text.

Double-click to edit; supports font family, size, weight, alignment, line height, color.

I) Color Picker (I)

Eyedropper to sample fill/stroke from canvas; updates current selection or active tool.

3) Figma/Canva-like UI Changes

Top Toolbar (persistent)

Tools: Move, Hand, Rectangle, Ellipse, Line, Polygon/Star, Pencil, Pen, Eraser, Text.

Fill/Stroke swatches, Stroke width, Opacity.

Align: left/center/right, top/middle/bottom; Distribute horizontally/vertically.

Arrange: bring forward/back; Group (Ctrl+G) / Ungroup (Ctrl+Shift+G).

Left Panel (permanent)

Tabs: Layers | Components

No hover-to-show, always visible (collapsible manually).

Layers: rename, drag reorder (z-index), eye toggle (visibility), lock toggle.

Right Panel (contextual Properties)

Show Position & Size (X, Y, W, H, rotation), Appearance (fill, stroke, opacity).

Shape-specific: corner radius, polygon/star sides.

Text: font, size, weight, align.

Path: stroke width, join, cap.

Image: replace, fit/fill/crop, opacity.

Canvas UX

Zoom: wheel; Ctrl+1 fit selection; Ctrl+0 reset.

Smart guides + snapping to grid/objects.

High-DPI scaling for crisp rendering.

4) Keyboard Shortcuts

Tools:
V = Move, H = Hand (Space hold), R = Rectangle, O = Ellipse, L = Line, B = Pencil, P = Pen, E = Eraser, T = Text, I = Eyedropper

Actions:
Esc = Deselect/exit mode
Ctrl+Z / Ctrl+Shift+Z = Undo/Redo
Ctrl+C / Ctrl+V = Copy/Paste
Ctrl+D = Duplicate
Delete = Remove
Ctrl+G / Ctrl+Shift+G = Group/Ungroup
Shift = Constrain proportions/angles
Arrow = Nudge 1px, Shift+Arrow = Nudge 10px

5) Image Support

Upload PNG/JPG/SVG.

Images behave like objects (move/resize/rotate, z-index).

Properties: opacity, replace, fit/fill/crop.

6) Architecture Guidelines

Object model: { id, type, props, transform, style, children? }

ToolManager (currentTool, setTool), SelectionManager (ids[], bbox).

History/Command pattern for undo/redo.

Unified pointer events.

Prevent default on canvas; stopPropagation on UI.

Consider using Fabric.js or Konva.js for rendering + transforms.

7) Acceptance Criteria

Empty canvas click or Esc ‚Üí clears selection.

Move tool ‚Üí drag, resize/rotate handles, Shift to constrain.

Pencil ‚Üí draws smoothed editable path.

Pen ‚Üí Bezier paths, anchors/handles visible in edit mode.

Eraser ‚Üí deletes objects hit; adjustable size.

Panels are permanently visible, not hover-only.

Layers panel: rename, reorder, visibility toggle, lock toggle.

All shortcuts work.

Zoom/pan, snap-to-grid, align/distribute actions function correctly.

Text editing and formatting works.

Images: upload, replace, resize, crop/fit.

8) QA Checklist

Test all tools (Pencil, Pen, Eraser, Text).

Verify deselect (click empty, Esc).

Verify move/resize/rotate/shift-constrain.

Verify layers panel (rename, reorder, eye, lock).

Verify shortcuts.

Verify zoom/pan + snapping.

Verify alignment/distribution.

Verify color picker.

Verify image upload/replace/crop.

Verify group/ungroup and arrange front/back.

9) Nice-to-Have (Phase 2)

Boolean ops: Union, Subtract, Intersect, Exclude.

Multi-page frames + exports.

Rulers and guides.

Snap settings (toggle).

‚úÖ Please implement the above in the design editor, then validate everything with the QA checklist. Thank you üôè